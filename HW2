Задание 1
Мы делаем MVP dating-сервиса, и у нас есть список парней и девушек (их число может варьироваться):

boys = ['Peter', 'Alex', 'John', 'Arthur', 'Richard']
girls = ['Kate', 'Liza', 'Kira', 'Emma', 'Trisha']
Выдвигаем гипотезу: лучшие рекомендации мы получим, если просто отсортируем имена по алфавиту и познакомим людей с одинаковыми индексами после сортировки! "Познакомить" пары нам поможет функция zip, а в цикле распакуем zip-объект и выведем информацию в виде:

Идеальные пары:
Alex и Emma
Arthur и Kate
John и Kira
Peter и Liza
Richard и Trisha

boys = ['Peter', 'Alex', 'John', 'Arthur', 'Richard']
girls = ['Kate', 'Liza', 'Kira', 'Emma', 'Trisha']
for boy, girl in zip(sorted (boys), sorted (girls)):
    print(boy, 'и', girl)
Alex и Emma
Arthur и Kate
John и Kira
Peter и Liza
Richard и Trisha
Задание 2
У нас есть список, содержащий информацию о среднедневной температуре в Фаренгейтах за недельный период по странам. Необходимо написать код, который рассчитает среднюю температуру за неделю в Цельсиях для каждой страны.

countries_temperature = [
 ['Thailand', [75.2, 77, 78.8, 73.4, 68, 75.2, 77]],
 ['Germany', [57.2, 55.4, 59, 59, 53.6, 55.4, 57.2]],
 ['Russia', [35.6, 37.4, 39.2, 41, 42.8, 39.2, 35.6]],
 ['Poland', [50, 50, 53.6, 57.2, 55.4, 55.4, 51.8]],
]
for country in countries_temperature:
    sum_temp = 0
    for temperature in country[1]:
        sum_temp += (temperature - 32) * 5 / 9
    print('РЕЗУЛЬТАТ: Средняя температура в', country[0], 'равна', round(sum_temp/len(country[1]), 2))
РЕЗУЛЬТАТ: Средняя температура в Thailand равна 23.86
РЕЗУЛЬТАТ: Средняя температура в Germany равна 13.71
РЕЗУЛЬТАТ: Средняя температура в Russia равна 3.71
РЕЗУЛЬТАТ: Средняя температура в Poland равна 11.86
Задание 3
Дан поток логов по количеству просмотренных страниц для каждого пользователя. Список отсортирован по ID пользователя. Вам необходимо написать алгоритм, который считает среднее значение просмотров на пользователя. Т. е. надо посчитать отношение суммы всех просмотров к количеству уникальных пользователей.

stream = [
    '2018-01-01,user1,3',
    '2018-01-07,user1,4',
    '2018-03-29,user1,1',
    '2018-04-04,user1,13',
    '2018-01-05,user2,7',
    '2018-06-14,user3,4',
    '2018-07-02,user3,10',
    '2018-03-21,user4,19',
    '2018-03-22,user4,4',
    '2018-04-22,user4,8',
    '2018-05-03,user4,9',
    '2018-05-11,user4,11',
]
​
x_stream = []
​
for x in stream:
    x_stream.append(x.split(','))
    
users = []
views = []
​
for user in x_stream:
    if user[1] not in users:
        users.append(user[1])
for vw in x_stream:
    if vw[1] in users:
        views.append(int(vw[2]))   
        
print(sum(views)/len(users))
23.25
Задание 4
Дана статистика рекламных кампаний по дням. Напишите алгоритм, который по паре дата-кампания ищет значение численного столбца. Т. е. для даты '2018-01-01' и 'google' нужно получить число 25. Считайте, что все комбинации дата-кампания уникальны.

stats = [
    ['2018-01-01', 'google', 25],
    ['2018-01-01', 'yandex', 65],
    ['2018-01-01', 'market', 89],
    ['2018-01-02', 'google', 574],
    ['2018-01-02', 'yandex', 249],
    ['2018-01-02', 'market', 994],
    ['2018-01-03', 'google', 1843],
    ['2018-01-03', 'yandex', 1327],
    ['2018-01-03', 'market', 1764],
]
​
date = input('Введите дату: ')
company = input('Введите назание компании: ')
​
for digit in stats:
    if digit[0] == date and digit[1] == company:
        print (digit[2])
​
Введите дату: 2018-01-02
Введите назание компании: google
574
